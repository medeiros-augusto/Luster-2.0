<!DOCTYPE html>
<html lang="pt-br">
<meta charset="UTF-8" />

<head>
  <style>
    /* Importando a fonte Poppins do Google Fonts */
    @import url('https://fonts.googleapis.com/css2?family=Poppins:wght@400;500;600;700&display=swap');

    /* Define o esquema de cores para o modo escuro */
    :root {
      color-scheme: dark;
    }

    /* Configurações básicas de estilos para todos os elementos */
    * {
      margin: 0;
      padding: 0;
      box-sizing: border-box;
    }

    /* Estilos para o corpo do documento */
    body {
      font: 500 20px Poppins, sans-serif;
      /* Define a fonte e o peso */
      padding: 1rem;
    }

    /* Estilos para os cabeçalhos de nível 1 */
    h1 {
      text-align: center;
      font-weight: 600;
      margin: 0 1rem 2rem;
    }

    /* Estilos para a roda de roleta */
    .wheel {
      margin: auto;
      width: 300px;
      height: 300px;
      position: relative;
      overflow: hidden;
      border-radius: 50%;
      transition: all 8000ms;
    }

    /* Estilos para os segmentos da roda de roleta */
    .wheel-segment {
      position: absolute;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      transform-origin: center center;
      clip-path: polygon(50% 50%, 0 0, 0 100%);
    }

    /* Estilos para o primeiro segmento da roda (vermelho) */
    .wheel-segment:nth-child(1) {
      background: red;
      transform: rotate(0deg);
    }

    /* Estilos para o segundo segmento da roda (verde) */
    .wheel-segment:nth-child(2) {
      background: green;
      transform: rotate(90deg);
    }

    /* Estilos para o terceiro segmento da roda (azul) */
    .wheel-segment:nth-child(3) {
      background: blue;
      transform: rotate(180deg);
    }

    /* Estilos para o quarto segmento da roda (amarelo) */
    .wheel-segment:nth-child(4) {
      background: yellow;
      transform: rotate(270deg);
    }

    /* Estilos para o texto dentro dos segmentos da roda */
    .wheel-text {
      position: absolute;
      top: 50%;
      left: 50%;
      transform: translate(-50%, -50%) rotate(-90deg);
      font-size: 1.25rem;
      font-weight: bold;
      color: white;
      text-align: center;
      text-shadow: 1px 1px 2px rgba(0, 0, 0, 0.5);
      white-space: nowrap;
      width: 80%;
      height: 80%;
    }

    /* Estilos para o contêiner da roleta */
    .roulette {
      position: relative;
      margin: auto;
      text-align: center;
    }

    /* Estilos para o ponteiro da roleta */
    .roulette::before {
      content: "";
      position: absolute;
      top: 0;
      left: 50%;
      transform: translate(-50%, -50%) rotate(45deg);
      width: 24px;
      height: 24px;
      background-color: darkorange;
      border-radius: 50% 50% 0 50%;
      box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);
      z-index: 20;
    }

    /* Estilos para os botões da roleta */
    .input-container {
      margin-bottom: 20px;
    }

    .input-container input {
      padding: 20px;
      border: none;
      border-radius: 5px;
      font-size: 16px;
      outline: none;
    }

    .input-container input::placeholder {
      color: #888;
    }

    .spin-button {
      border: none;
      cursor: pointer;
      background-color: #e74c3c;
      color: white;
      padding: 10px 30px;
      font-size: 1.5rem;
      border-radius: 5px;
      transition: background-color 0.3s ease;
    }

    .spin-button:hover {
      background-color: #c0392b;
    }

    /*cor dos botões*/
    .color-button {
      width: 50px;
      height: 50px;
      border-radius: 50%;
      border: none;
      margin: 5px;
      cursor: pointer;
    }

    .red {
      background-color: red;
    }

    .green {
      background-color: green;
    }

    .blue {
      background-color: blue;
    }

    .yellow {
      background-color: yellow;
    }
  </style>
</head>
<h1>Roleta</h1>

<div class="roulette">
  <div class="wheel">
    <div class="wheel-segment">
      <div class="wheel-text"></div>
    </div>
    <div class="wheel-segment">
      <div class="wheel-text"></div>
    </div>
    <div class="wheel-segment">
      <div class="wheel-text"></div>
    </div>
    <div class="wheel-segment">
      <div class="wheel-text"></div>
    </div>
  </div>
  <input type="number" id="input-value" placeholder="Insira um valor" />
  <button class="color-button red" onclick="selectColor('red')"></button>
  <button class="color-button green" onclick="selectColor('green')"></button>
  <button class="color-button blue" onclick="selectColor('blue')"></button>
  <button class="color-button yellow" onclick="selectColor('yellow')"></button>

  <button class="spin-button" onclick="spinWheel()">Girar</button>
</div>
<script>
  const wheel = document.querySelector('.wheel'); // Seleciona o elemento da roda
  const btn = document.querySelector('.spin-button'); // Seleciona o elemento do botão
  const input = document.querySelector('#input-value'); // Seleciona o elemento do input

  let current = 0; // Variável para armazenar a posição atual da roda
  let selectedColor = ''; // Variável para armazenar a cor selecionada

  function spinWheel() {
    if (selectedColor === '') {
      alert('Selecione uma cor antes de girar!');
      return;
    }

    const rotate = Math.floor(Math.random() * 360) + 720; // Gera um valor aleatório de rotação
    const angle = current + rotate; // Calcula o ângulo final da roda

    wheel.style.transform = `rotate(${angle}deg)`; // Aplica a transformação de rotação na roda

    current = angle; // Atualiza a posição atual da roda

    btn.disabled = true; // Desabilita o botão temporariamente
    wheel.addEventListener('transitionend', () => { // Adiciona um listener de evento de transição na roda
      btn.disabled = false; // Habilita o botão novamente após a transição finalizar

      const winningColor = getWinningColor(angle % 360); // Obtém a cor vencedora com base no ângulo resultante

      if (winningColor === selectedColor) {
        const inputValue = Number(input.value); // Obtém o valor inserido no input convertendo para número
        const result = calculateResult(selectedColor, inputValue); // Calcula o resultado com base na cor selecionada e no valor inserido

        alert(`Você ganhou ${result} pontos!`); // Exibe um alerta com a pontuação obtida
      } else {
        alert('Você perdeu! Tente novamente.');
      }
    }, { once: true }); // Remove o listener de evento após ser acionado
  }

  // Função para selecionar uma cor
  function selectColor(color) {
    selectedColor = color;
  }

  function getWinningColor(angle) { // Função para obter a cor vencedora com base no ângulo
    if (angle >= 0 && angle < 90) {
      return 'red'; // Retorna 'red' para ângulos entre 0 e 90
    } else if (angle >= 90 && angle < 180) {
      return 'green'; // Retorna 'green' para ângulos entre 90 e 180
    } else if (angle >= 180 && angle < 270) {
      return 'blue'; // Retorna 'blue' para ângulos entre 180 e 270
    } else {
      return 'yellow'; // Retorna 'yellow' para ângulos maiores ou iguais a 270
    }
  }

  function calculateResult(color, inputValue) { // Função para calcular o resultado com base na cor e no valor inserido
    let multiplier = 1; // Inicializa o multiplicador com 1

    if (color === 'red') { // Se a cor for 'red'
      multiplier = 2; // O multiplicador é 2
    } else if (color === 'green') { // Se a cor for 'green'
      multiplier = 5; // O multiplicador é 5
    } else if (color === 'blue') { // Se a cor for 'blue'
      multiplier = 10; // O multiplicador é 10
    } else if (color === 'yellow') { // Se a cor for 'yellow'
      multiplier = 2; // O multiplicador é 2
    }

    return inputValue * multiplier;
  }

</script>

</html>